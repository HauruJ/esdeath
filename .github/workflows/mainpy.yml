name: Generate routing rules for Surge
on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * *'
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "category_porn=https://rules.kr328.app/category-porn.yaml" >> $GITHUB_ENV
        shell: bash
        
      - name: Checkout the default branch
        uses: actions/checkout@v3

      - name: Make directory
        run: |
          mkdir -p Domainset
          mkdir -p Ruleset
          mkdir -p dist
          
      - name: Generate category-porn.txt file
        run: |
          echo -e "# Generated on $(date)\n" > Ruleset/category-porn.list
          echo -e "# Generated from https://github.com/v2fly/domain-list-community/tree/master/data/category-porn\n" >> Ruleset/category-porn.list
          echo -e "# Generated from https://rules.kr328.app/category-porn.yaml\n" >> Ruleset/category-porn.list
          python3 -c '
          import requests
          category_porn_url = "${{ env.category_porn }}"
          response = requests.get(category_porn_url)
          lines = response.text.split("\n")
          with open("Ruleset/category-porn.list", "a") as f:
              for line in lines:
                  if line.startswith("- \"+."):
                      domain = line.replace("- \"+.", "").replace("\"", "").strip()
                      f.write("DOMAIN-SUFFIX,{}\n".format(domain))
                  elif line.startswith("- \""):
                      domain = line.replace("- \"", "").replace("\"", "").strip()
                      f.write("DOMAIN,{}\n".format(domain))
                      'shell: bash

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          mv Ruleset ./publish/
          mv Domainset ./publish/
          
      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-action[bot]"
          git config --local user.email "126152485+anyawa@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}"
          git push -f -u origin release
      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls Domainset); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/Domainset/${file}"
          done
          for file in $(ls Ruleset); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release@release/Ruleset/${file}"
            done
